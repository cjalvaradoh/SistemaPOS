@model IEnumerable<SistemaPOS.Models.Producto> 
@{
	ViewData["Title"] = "POS";
	Layout = "_LayoutLogged";
}

<div class="container my-4">
    <h1 class="text-center text-dark mb-4">PUNTO DE VENTA</h1>
    <link rel="stylesheet" href="~/css/stylesPos.css" asp-append-version="true" />
    <img src="~/images/banner.jpg" alt="Banner de Punto de Venta" class="banner-img">

    <!-- Barra de búsqueda -->
    <div class="row">
        <div class="col-12 mb-3">
            <div class="input-group shadow-sm">
                <input type="text" class="form-control" placeholder="Buscar producto..." id="searchInput" />

            </div>
        </div>
    </div>

    <div class="row">
        <!-- Grilla de productos -->
        <div class="col-lg-8">
            <h4 class="text-dark">Productos</h4>
            <div class="row g-3" id="grillaProductos">
                @foreach (var producto in Model)
                {
                    <div class="col-md-6 col-lg-4 producto" 
                         data-nombre="@producto.Nombre" 
                         data-codigo="@producto.Codigo">
                        <div class="card shadow-sm h-100">
                            <img src="@producto.thumbnail_url" class="card-img-top" style="max-height:200px" alt="@producto.Nombre">
                            <div class="card-body">
                                <h5 class="card-title text-truncate">@producto.Nombre</h5>
                                <p class="card-text fw-bold text-dark">Q.@producto.Precio</p>
                                <button class="btn btn-success w-100 add-to-cart" 
                                        style="background-color: rgb(27, 75, 170); border-color: rgb(19, 52, 118); color: white;" 
                                        data-id="@producto.ProductoId" 
                                        data-nombre="@producto.Nombre" 
                                        data-precio="@producto.Precio">
                                    <i class="bi bi-cart-plus"></i> Agregar
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Carrito -->
        <div class="col-lg-4">
            <h4 class="text-dark">Mi Carrito</h4>
            <div class="list-group overflow-auto" style="max-height: 400px;" id="cart">
                <!-- Items del carrito -->
            </div>
            <div class="mt-3">
                <h5 class="d-flex justify-content-between">
                    <span>Total:</span>
                    <span id="total" class="text-dark fw-bold"></span>
                </h5>
                <button class="btn btn-primary w-100 mt-3" 
                        data-bs-toggle="modal" 
                        data-bs-target="#finalizarCompra"
                        style="background-color: rgb(27, 75, 170); border-color: rgb(19, 52, 118); color: white;" >
                    <i class="bi bi-cash"></i> Finalizar Compra
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para finalizar compra -->
<div class="modal fade" id="finalizarCompra" tabindex="-1" aria-labelledby="finalizarCompraLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header text-white" style="background-color: #f8f9fa;">
                <h1 class="modal-title fs-5 text-dark" id="finalizarCompraLabel">Finalizar Compra</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formularioFinalizarCompra">
                    <div class="mb-3">
                        <label for="cliente" class="form-label">Seleccione al Cliente</label>
                        <select class="form-select" id="cliente" name="cliente" required onchange="actualizarNit()">
                            <option value="">Seleccione ...</option>
                            @foreach (var cliente in ViewBag.Clientes as List<SistemaPOS.Models.Cliente>)
                            {
                                <option value="@cliente.ClienteId" data-nit="@cliente.Nit">@cliente.Nombre</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="empleado" class="form-label">Seleccione al Empleado</label>
                        <select class="form-select" id="empleado" name="empleado" required>
                            <option value="">Seleccione ...</option>
                            @foreach (var empleado in ViewBag.Empleados as List<SistemaPOS.Models.Empleado>)
                            {
                                <option value="@empleado.EmpleadoId">@empleado.Nombre</option>
                            }
                        </select>
                    </div>
                    
                    <div class="mb-3">
                        <label for="nit" class="form-label">NIT del Cliente</label>
                        <input type="text" id="nit" class="form-control" placeholder="NIT del cliente" readonly />
                    </div>
                    
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="usarCF" />
                        <label class="form-check-label" for="usarCF">
                            Usar NIT de Consumidor Final (CF)
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="botonFinalizarCompra" onclick="finalizarCompra()">Finalizar</button>
            </div>
        </div>
    </div>
</div>

<script>
	// Capturar el botón y el campo de texto
	const searchInput = document.getElementById('searchInput');
	const searchButton = document.getElementById('searchButton');
	const productos = document.querySelectorAll('.producto'); 

	// Función para filtrar productos
	function filtrarProductos() {
		const searchTerm = searchInput.value.toLowerCase(); 

		productos.forEach(producto => {
			const nombre = producto.getAttribute('data-nombre').toLowerCase(); 
			const codigo = producto.getAttribute('data-codigo').toLowerCase(); 

			
			if (nombre.includes(searchTerm) || codigo.includes(searchTerm)) {
				producto.style.display = 'block'; 
			} else {
				producto.style.display = 'none'; 
			}
		});
	}


    searchInput.addEventListener('input', filtrarProductos);  // Buscar mientras se escribe

	document.getElementById('usarCF').addEventListener('change', function () {
    const nitInput = document.getElementById('nit');
    if (this.checked) {
        nitInput.value = "CF";
        nitInput.readOnly = true; // Evitar que el usuario lo modifique
    } else {
        nitInput.value = ''; // Limpiar el campo si se desmarca
        nitInput.readOnly = false;
    }
	});



	let carrito = [];
	const contenedorCarrito = document.getElementById('cart');
	const elementoTotal = document.getElementById('total');

	function actualizarCarrito() {
    contenedorCarrito.innerHTML = '';
    let total = 0;

    carrito.forEach((item) => {
        const nuevoElemento = document.createElement('div');
        nuevoElemento.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center', 'shadow-sm', 'py-3');

        nuevoElemento.innerHTML = `
            <div class="d-flex flex-column">
                <span class="fw-bold">${item.nombre}</span>
                <small class="text-muted">${item.cantidad} x Q.${item.precio.toFixed(2)}</small>
            </div>
            <div class="d-flex align-items-center">
                <span class="badge bg-primary text-white fs-6 me-3">
                    Q.${(item.cantidad * item.precio).toFixed(2)}
                </span>
                <button class="btn btn-sm btn-outline-secondary decrement-item mx-1 shadow-sm" data-id="${item.id}">
                    <i class="bi bi-dash-circle"></i>
                </button>
                <button class="btn btn-sm btn-outline-danger remove-item mx-1 shadow-sm" data-id="${item.id}">
                    <i class="bi bi-trash"></i>
                </button>
            </div>
        `;

        contenedorCarrito.appendChild(nuevoElemento);
        total += item.cantidad * item.precio;
    });

    elementoTotal.textContent = `Q.${total.toFixed(2)}`;
}


	document.getElementById('grillaProductos').addEventListener('click', function (e) {
		if (e.target.closest('.add-to-cart')) {
			const button = e.target.closest('.add-to-cart');
			const id = button.getAttribute('data-id');
			const nombre = button.getAttribute('data-nombre');
			const precio = parseFloat(button.getAttribute('data-precio'));

			const productoEnCarrito = carrito.find(item => item.id === id);

			if (productoEnCarrito) {
				productoEnCarrito.cantidad++;
			} else {
				carrito.push({ id, nombre, precio, cantidad: 1 });
			}

			actualizarCarrito();
		}
	});

	contenedorCarrito.addEventListener('click', function (e) {
		const target = e.target.closest('.btn');
		if (!target) return;

		const id = target.getAttribute('data-id');
		const item = carrito.find(item => item.id == id);

		if (target.classList.contains('remove-item')) {
			carrito = carrito.filter(item => item.id != id);
		} else if (target.classList.contains('decrement-item') && item) {
			item.cantidad--
			if (item.cantidad === 0) {
				carrito = carrito.filter(item => item.id != id);
			}
		}

		actualizarCarrito();
	});

	document.getElementById('botonFinalizarCompra').addEventListener('click', async () => {
    const clienteId = document.getElementById('cliente').value;
    const empleadoId = document.getElementById('empleado').value;
    let nitCliente = document.getElementById('nit').value;

    // Validar si el cliente es CF
    if (!clienteId && nitCliente.trim() === "") {
        alert('Debe seleccionar un cliente o ingresar un NIT válido.');
        return;
    }

    // Si no se ingresa NIT, asignamos "CF"
    if (!nitCliente) {
        nitCliente = "CF"; // Asignar CF si el cliente es Consumidor Final
    }

    const venta = {
        clienteId: clienteId || null,
        empleadoId: empleadoId,
        nitCliente: nitCliente,  // Enviar el NIT o "CF"
        detalles: carrito.map(item => ({
            productoId: item.id,
            cantidad: item.cantidad,
            precioUnitario: item.precio
        }))
    };

    try {
        const response = await fetch('/Ventas/CrearVenta', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(venta)
        });

        if (response.ok) {
            const responseJson = await response.json();
            alert('Venta finalizada con éxito. Código de venta: ' + responseJson.ventaId);
            window.location.href = `/Ventas/ImprimirFactura/${responseJson.ventaId}?nitCliente=${venta.nitCliente}`;  // Pasar nitCliente como parámetro
        } else {
            alert('Error al finalizar la compra.');
        }
    } catch (error) {
        console.log(error);
        alert('Error al finalizar la compra.');
    }
});

</script>